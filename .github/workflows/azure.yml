name: Build and deploy Node.js app to Azure Container Registry - scoopDevContainerRegistry

on:
  push:
    branches:
      - development
      - main

jobs:
  build-dev:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/development'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set secrets as build arguments
        env:
          DB_DATABASE_DEV: ${{ secrets.DB_DATABASE_DEV }}
          DB_HOST_DEV: ${{ secrets.DB_HOST_DEV }}
          DB_USERNAME_DEV: ${{ secrets.DB_USERNAME_DEV }}
          DB_PORT_DEV: ${{ vars.DB_PORT_DEV }}
          DB_PASSWORD_DEV: ${{ secrets.DB_PASSWORD_DEV }}
          JWT_SECRET_DEV: ${{ secrets.JWT_SECRET_DEV }}
          PORT_DEV: ${{ vars.PORT_DEV }} 
        run: |
          echo "DB_DATABASE_DEV=${DB_DATABASE_DEV}" >> $GITHUB_ENV
          echo "DB_HOST_DEV=${DB_HOST_DEV}" >> $GITHUB_ENV
          echo "DB_USERNAME_DEV=${DB_USERNAME_DEV}" >> $GITHUB_ENV
          echo "DB_PORT_DEV=5432" >> $GITHUB_ENV
          echo "DB_PASSWORD_DEV=${DB_PASSWORD_DEV}" >> $GITHUB_ENV
          echo "JWT_SECRET_DEV=${JWT_SECRET_DEV}" >> $GITHUB_ENV
          echo "PORT_DEV=${PORT_DEV}" >> $GITHUB_ENV

      - name: Print env variables
        run: |
          echo "DB_DATABASE_DEV=$DB_DATABASE_DEV"
          echo "DB_HOST_DEV=$DB_HOST_DEV"
          echo "DB_USERNAME_DEV=$DB_USERNAME_DEV"
          echo "DB_PORT_DEV=5432" >> $GITHUB_ENV
          echo "DB_PASSWORD_DEV=$DB_PASSWORD_DEV"
          echo "JWT_SECRET_DEV=$JWT_SECRET_DEV"
          echo "PORT_DEV=$PORT_DEV"

      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER_DEV }}
          username: ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME_DEV }}
          password: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD_DEV }}

      - name: Build and push Docker image (Development)
        run: |
          docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER_DEV }}/backend:${{ github.sha }} -f Dockerfile.dev .
          docker push ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER_DEV }}/backend:${{ github.sha }}

  build-prod:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set secrets as build arguments
        env:
          DB_DATABASE_PROD: ${{ secrets.DB_DATABASE_PROD }}
          DB_HOST_PROD: ${{ secrets.DB_HOST_PROD }}
          DB_USERNAME_PROD: ${{ secrets.DB_USERNAME_PROD }}
          DB_PORT_PROD: ${{ env.DB_PORT_PROD }}
          DB_PASSWORD_PROD: ${{ secrets.DB_PASSWORD_PROD }}
          JWT_SECRET_PROD: ${{ secrets.JWT_SECRET_PROD }}
          PORT_PROD: ${{ env.PORT_PROD }}
        run: |
          echo "DB_DATABASE_PROD=${DB_DATABASE_PROD}" >> $GITHUB_ENV
          echo "DB_HOST_PROD=${DB_HOST_PROD}" >> $GITHUB_ENV
          echo "DB_USERNAME_PROD=${DB_USERNAME_PROD}" >> $GITHUB_ENV
          echo "DB_PORT_PROD=${DB_PORT_PROD}" >> $GITHUB_ENV
          echo "DB_PASSWORD_PROD=${DB_PASSWORD_PROD}" >> $GITHUB_ENV
          echo "JWT_SECRET_PROD=${JWT_SECRET_PROD}" >> $GITHUB_ENV
          echo "PORT_PROD=${PORT_PROD}" >> $GITHUB_ENV

      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER_PROD }}
          username: ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME_PROD }}
          password: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD_PROD }}

      - name: Build and push Docker image (Production)
        run: |
          docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER_PROD }}/backend:${{ github.sha }} ./docker
          docker push ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER_PROD }}/backend:${{ github.sha }}

  deploy-dev:
    runs-on: ubuntu-latest
    needs: build-dev
    if: github.ref == 'refs/heads/development'

    steps:
      - name: Deploy to Azure Container Instances (Development)
        uses: azure/aci-deploy@v1
        with:
          resource-group: scoop-dev-rg
          dns-name-label: dev-backend
          image: ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER_DEV }}/backend:${{ github.sha }}
          registry-login-server: ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER_DEV }}
          registry-username: ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME_DEV }}
          registry-password: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD_DEV }}
          os-type: linux
          cpu: 1
          memory: 1.5
          location: eastus

  deploy-prod:
    runs-on: ubuntu-latest
    needs: build-prod
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Deploy to Azure Container Instances (Production)
        uses: azure/aci-deploy@v1
        with:
          resource-group: scoop-prod-rg
          dns-name-label: prod-backend
          image: ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER_PROD }}/backend:${{ github.sha }}
          registry-login-server: ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER_PROD }}
          registry-username: ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME_PROD }}
          registry-password: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD_PROD }}
          os-type: linux
          cpu: 1
          memory: 1.5
          location: eastus
