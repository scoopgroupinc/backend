name: Build and deploy Node.js app to Azure Container Registry - scoopDevContainerRegistry

on:
    push:
        branches:
            - development
            - main

jobs:
    build-dev:
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/development'

        steps:
            - name: Checkout repository
              uses: actions/checkout@v2
              with:
                  repository: scoopgroupinc/backend
                  token: ${{ secrets.GITHUB_TOKEN }}
                  path: ./backend

            - uses: azure/docker-login@v1
              with:
                  login-server: ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER_DEV }}
                  username: ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME_DEV }}
                  password: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD_DEV }}

            - name: Set up Node.js version
              uses: actions/setup-node@v1
              with:
                  node-version: '16'

            - name: Build and push Docker image (Development)
              working-directory: ./backend
              run: |
                  docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER_DEV }}/myapp:$GITHUB_SHA .
                  docker push ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER_DEV }}/myapp:$GITHUB_SHA

    build-prod:
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main'

        steps:
            - name: Checkout repository
              uses: actions/checkout@v2
              with:
                  repository: scoopgroupinc/backend
                  token: ${{ secrets.GITHUB_TOKEN }}
                  path: ./backend

            - uses: azure/docker-login@v1
              with:
                  login-server: ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER_PROD }}
                  username: ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME_PROD }}
                  password: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD_PROD }}

            - name: Set up Node.js version
              uses: actions/setup-node@v1
              with:
                  node-version: '16'

            - name: Build and push Docker image (Production)
              working-directory: ./backend
              run: |
                  docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER_PROD }}/myapp:$GITHUB_SHA .
                  docker push ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER_PROD }}/myapp:$GITHUB_SHA

    deploy-dev:
        runs-on: ubuntu-latest
        needs: build-dev
        if: github.ref == 'refs/heads/development'

        steps:
            - name: Deploy to Azure Container Instances (Development)
              uses: azure/aci-deploy@v1
              with:
                  resource-group: scoop-dev-rg
                  dns-name-label: dev-backend
                  image: ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER_DEV }}/myapp:$GITHUB_SHA
                  registry-login-server: ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER_DEV }}
                  registry-username: ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME_DEV }}
                  registry-password: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD_DEV }}
                  os-type: linux
                  cpu: 1
                  memory: 1.5
                  location: eastus

    deploy-prod:
        runs-on: ubuntu-latest
        needs: build-prod
        if: github.ref == 'refs/heads/main'

        steps:
            - name: Deploy to Azure Container Instances (Production)
              uses: azure/aci-deploy@v1
              with:
                  resource-group: scoop-prod-rg
                  dns-name-label: prod-backend
                  image: ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER_PROD }}/myapp:$GITHUB_SHA
                  registry-login-server: ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER_PROD }}
                  registry-username: ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME_PROD }}
                  registry-password: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD_PROD }}
                  os-type: linux
                  cpu: 1
                  memory: 1.5
                  location: eastus
