name: Build and deploy Node.js app to scoopDevContainerRegistry

on:
  push:
    branches:
      - setup-copy

env:
  NODE_VERSION: '16' # Define node version here to maintain consistency across jobs
  PYTHON_VERSION: '3.x' # Define python version here to maintain consistency across jobs
  DB_TYPE: ${{ vars.DB_TYPE_DEV }}
  DB_DATABASE: ${{ vars.DB_DATABASE_DEV }}
  DB_HOST: ${{ vars.DB_HOST_DEV }}
  DB_USERNAME: ${{ vars.DB_USERNAME_DEV }}
  DB_PORT: ${{ vars.DB_PORT_DEV }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD_DEV }}
  DB_SSL_CA_CERT: ${{ secrets.DB_SSL_CA_CERT_DEV }}
  JWT_SECRET: ${{ secrets.JWT_SECRET_DEV }}
  JWT_EXPIRES_IN: ${{ secrets.JWT_EXPIRES_IN_DEV }}
  PORT: ${{ vars.PORT_DEV }}
  FILESERVICE_PORT: ${{ vars.FILESERVICE_PORT_DEV }}
  BE_FILE_SERVER_URL: ${{ vars.BE_FILE_SERVER_URL_DEV }}
  REGISTRY_FOLDER: backend #folder name making it easier to find all docker images from same repo
  AZURE_CONTAINER_REGISTRY_LOGIN_SERVER: ${{ vars.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER_DEV }}
  AZURE_CONTAINER_REGISTRY_USERNAME: ${{ vars.AZURE_CONTAINER_REGISTRY_USERNAME_DEV }}
  AZURE_CONTAINER_REGISTRY_PASSWORD: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD_DEV }}
  AZURE_CREDENTIALS: $${{ secrets.AZURE_CREDENTIALS_DEV }}
  AZURE_PUBLIC_IP: ${{ vars.AZURE_PUBLIC_IP_DEV }}
  NAMESPACE: scoop-dev-ingress-controlled-namespace
  RESOURCE_GROUP: scoop-dev-rg
  CLUSTER_NAME: scoop-dev-cluster

env:
  DB_TYPE: ${{ vars.DB_TYPE_DEV }}
  DB_DATABASE: ${{ vars.DB_DATABASE_DEV }}
  DB_HOST: ${{ vars.DB_HOST_DEV }}
  DB_USERNAME: ${{ secrets.DB_USERNAME_DEV }}
  DB_PORT: ${{ vars.DB_PORT_DEV }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD_DEV }}
  DB_SSL_CA_CERT: ${{ secrets.DB_SSL_CA_CERT_DEV }}
  JWT_SECRET: ${{ secrets.JWT_SECRET_DEV }}
  JWT_EXPIRES_IN: ${{ secrets.JWT_EXPIRES_IN_DEV }}
  PORT: ${{ vars.PORT_DEV }}
  FILESERVICE_PORT: ${{ vars.FILESERVICE_PORT_DEV }}
  BE_FILE_SERVER_URL: ${{ vars.BE_FILE_SERVER_URL_DEV }}
  REGISTRY_FOLDER: backend

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
          - uses: actions/checkout@v2

          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v2

          - name: Log in to registry
            uses: docker/login-action@v2
            with:
                registry: https://scoopdevcontainerregistry.azurecr.io/
                username: ${{ vars.AZURE_CONTAINER_REGISTRY_USERNAME_DEV }}
                password: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD_DEV }}
                
          - name: Build and push container image to registry
            uses: docker/build-push-action@v3
            with:
                push: true
                tags: |
                  scoopdevcontainerregistry.azurecr.io/backend:${{ github.sha }}
                  scoopdevcontainerregistry.azurecr.io/backend:latest
                file: ./Dockerfile
                build-args: |
                    DB_TYPE=${{ env.DB_TYPE }}
                    DB_DATABASE=${{ env.DB_DATABASE }}
                    DB_HOST=${{ env.DB_HOST }}
                    DB_USERNAME=${{ env.DB_USERNAME }}
                    DB_PORT=${{ env.DB_PORT }}
                    DB_PASSWORD=${{ env.DB_PASSWORD }}
                    DB_SSL_CA_CERT=${{ env.DB_SSL_CA_CERT }}
                    JWT_SECRET=${{ env.JWT_SECRET }}
                    JWT_EXPIRES_IN=${{ env.JWT_EXPIRES_IN }}
                    PORT=${{ env.PORT }}
                    BE_FILE_SERVER_URL=${{ env.BE_FILE_SERVER_URL }}
  
    deploy:
        permissions:
            actions: read
            contents: read
            id-token: write
        runs-on: ubuntu-latest
        needs: build

      - uses: azure/docker-login@v1
        with:
            login-server: ${{ env.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }}
            username: ${{ env.AZURE_CONTAINER_REGISTRY_USERNAME }}
            password: ${{ env.AZURE_CONTAINER_REGISTRY_PASSWORD }}

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Set up AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name:  ${{ env.CLUSTER_NAME }}}

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Substitute environment variables in k8s config
        run: |
            export PORT=${{ env.PORT }}
            export IMAGE_TAG=${{ github.sha }}
            export CONTAINER_REGISTRY=${{ env.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }}
            export PUBLIC_IP=${{ env.AZURE_PUBLIC_IP }}
            touch k8/k8.yml
            envsubst < k8/k8.yml.template > k8/k8.yml

      #to remove after certain it works
      - name: Echo contents of k8.yml
        run: cat k8/k8.yml

<<<<<<< HEAD
            - name: Checkout repository
              uses: actions/checkout@v3
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: Substitute environment variables in k8s config
              run: |
                  export PORT=${{ env.PORT }}
                  export IMAGE_TAG=${{ github.sha }}
                  export CONTAINER_REGISTRY=${{ vars.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER_DEV }}
                  export PUBLIC_IP=${{ vars.AZURE_PUBLIC_IP_DEV }}
                  touch k8/k8.yml
                  envsubst < k8/k8.yml.template > k8/k8.yml

            - name: Echo contents of k8.yml
              run: cat k8/k8.yml

            - name: Deploy to AKS
              id: deploy-aks
              uses: Azure/k8s-deploy@v4
              with:
                  namespace: scoop-dev-ingress-controlled-namespace
                  images: ${{ vars.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER_DEV }}/backend:${{ github.sha }}
                  manifests: |
                      k8/k8.yml
=======
      - name: Deploy to AKS
        id: deploy-aks
        uses: Azure/k8s-deploy@v4
        with:
            namespace: ${{ env.NAMESPACE }}
            images: ${{ env.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }}/${{ env.REGISTRY_FOLDER }}:${{ github.sha }}
            manifests: |
                k8/k8.yml
>>>>>>> f1b2fad (kubernetes workflow test)
