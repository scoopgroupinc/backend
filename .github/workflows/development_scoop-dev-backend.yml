# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy container app to Azure Web App - scoop-dev-backend

on:
    push:
        branches:
            - development
            - main 
            - workflow
    workflow_dispatch:

env:
    NODE_VERSION: '16' # Define node version here to maintain consistency across jobs
    # PYTHON_VERSION: '3.x' # Define python version here to maintain consistency across jobs
    DB_TYPE: ${{ vars.DB_TYPE_DEV }}
    DB_DATABASE: ${{ vars.DB_DATABASE_DEV }}
    DB_HOST: ${{ vars.DB_HOST_DEV }}
    DB_USERNAME: ${{ secrets.DB_USERNAME_DEV }}
    DB_PORT: ${{ vars.DB_PORT_DEV }}
    DB_PASSWORD: ${{ secrets.DB_PASSWORD_DEV }}
    DB_SSL_CA_CERT: ${{ secrets.DB_SSL_CA_CERT_DEV }}
    JWT_SECRET: ${{ secrets.JWT_SECRET_DEV }}
    JWT_EXPIRES_IN: ${{ secrets.JWT_EXPIRES_IN_DEV }}
    PORT: ${{ vars.PORT_DEV }}
    # FILESERVICE_PORT: ${{ vars.FILESERVICE_PORT_DEV }}
    BE_FILE_SERVER_URL: ${{ vars.BE_FILE_SERVER_URL_DEV }}
    REGISTRY_FOLDER: backend
    AZURE_CONTAINER_REGISTRY_LOGIN_SERVER: ${{ vars.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER_DEV }}
    AZURE_CONTAINER_REGISTRY_USERNAME: ${{ vars.AZURE_CONTAINER_REGISTRY_USERNAME_DEV }}
    AZURE_CONTAINER_REGISTRY_PASSWORD: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD_DEV }}
    # AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS_DEV }}
    # AZURE_PUBLIC_IP: ${{ vars.AZURE_PUBLIC_IP_DEV }}
    # NAMESPACE: facets-services-namespace
    # RESOURCE_GROUP: scoop-dev-rg
    # CLUSTER_NAME: facets-cluster
    # FACETS_GITHUB_SERVICE_PRINCIPLE: ${{ secrets.FACETS_GITHUB_SERVICE_PRINCIPLE }}
    AZURE_GITHUB_SERVICE_PRINCIPLE: ${{ secrets.AZURE_GITHUB_SERVICE_PRINCIPLE_DEV }}

jobs:
    build:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            deployments: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: Login to Azure
              uses: azure/login@v1
              with:
                  creds: ${{ secrets.AZURE_GITHUB_SERVICE_PRINCIPLE_DEV }}   

            - name: Login to Docker Registry
              uses: azure/docker-login@v1
              with:
                  login-server: ${{ env.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }}
                  username: ${{ env.AZURE_CONTAINER_REGISTRY_USERNAME }}
                  password: ${{ env.AZURE_CONTAINER_REGISTRY_PASSWORD }}

            - name: Build and push Docker image (Development)
              run: |
                  docker build -t ${{ env.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }}/${{ env.REGISTRY_FOLDER }}:${{ github.sha }} -f Dockerfile --build-arg DB_TYPE="${env.DB_TYPE}" --build-arg DB_DATABASE="${env.DB_DATABASE}" --build-arg DB_HOST="${env.DB_HOST}" --build-arg DB_USERNAME="${env.DB_USERNAME}" --build-arg DB_PORT="${env.DB_PORT}" --build-arg DB_PASSWORD="${env.DB_PASSWORD}"  --build-arg DB_SSL_CA_CERT="${env.DB_SSL_CA_CERT}" --build-arg JWT_SECRET="${env.JWT_SECRET}" --build-arg JWT_EXPIRES_IN="${env.JWT_EXPIRES_IN}" --build-arg PORT="${env.PORT}" --build-arg BE_FILE_SERVER_URL="${env.BE_FILE_SERVER_URL}" .
                  docker push ${{ env.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }}/${{ env.REGISTRY_FOLDER }}:${{ github.sha }}
                  docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER_DEV }}/backend:latest -f Dockerfile --build-arg DB_TYPE="${env.DB_TYPE}" --build-arg DB_DATABASE="${env.DB_DATABASE}" --build-arg DB_HOST="${env.DB_HOST}" --build-arg DB_USERNAME="${env.DB_USERNAME}" --build-arg DB_PORT="${env.DB_PORT}" --build-arg DB_PASSWORD="${env.DB_PASSWORD}" --build-arg DB_SSL_CA_CERT="${env.DB_SSL_CA_CERT}" --build-arg JWT_SECRET="${env.JWT_SECRET}" --build-arg JWT_EXPIRES_IN="${env.JWT_EXPIRES_IN}" --build-arg PORT="${env.PORT}" --build-arg BE_FILE_SERVER_URL="${env.BE_FILE_SERVER_URL}" .
                  docker push ${{ env.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }}/${{ env.REGISTRY_FOLDER }}:latest

    deploy:
        runs-on: ubuntu-latest
        needs: build
        environment:
            name: 'production'
            url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

        steps:

            - name: Login to Azure
              uses: azure/login@v1
              with:
                  creds: ${{ secrets.AZURE_GITHUB_SERVICE_PRINCIPLE_DEV }}   
                  
            - uses: azure/docker-login@v1
              with:
                  login-server: ${{ vars.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER_DEV }}
                  username: ${{ vars.AZURE_CONTAINER_REGISTRY_USERNAME_DEV }}
                  password: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD_DEV }}
                  
            - name: Deploy to Azure Web App
              id: deploy-to-webapp
              uses: azure/webapps-deploy@v2
              with:
                  app-name: 'scoop-dev-backend'
                  slot-name: 'production'
                  publish-profile: ${{ secrets.AzureAppService_PublishProfile_e701ab39c8fc487aa80e83f44b85f23e }}
                  images: '${{ env.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }}/${{ env.REGISTRY_FOLDER }}:${{ github.sha }}'
