# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy container app to Azure Web App - scoop-dev-backend

on:
    push:
        branches:
            - development
    workflow_dispatch:

jobs:
    build:
        runs-on: 'ubuntu-latest'

        steps:
            - uses: actions/checkout@v2

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Log in to registry
              uses: docker/login-action@v2
              with:
                  registry: https://scoopdevcontainerregistry.azurecr.io/
                  username: ${{ secrets.AzureAppService_ContainerUsername_22c65bee59134efc834781cf216c0ff5 }}
                  password: ${{ secrets.AzureAppService_ContainerPassword_723b08e54f8f40a9a587182c149a0f76 }}

            # - name: Build and push container image to registry
            #   uses: docker/build-push-action@v3
            #   with:
            #     push: true
            #     tags: scoopdevcontainerregistry.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_22c65bee59134efc834781cf216c0ff5 }}/backend:${{ github.sha }}
            #     file: ./Dockerfile

            - name: Set secrets as build arguments
              env:
                  DB_TYPE: ${{ vars.DB_TYPE_DEV }}
                  DB_DATABASE: ${{ vars.DB_DATABASE_DEV }}
                  DB_HOST: ${{ vars.DB_HOST_DEV }}
                  DB_USERNAME: ${{ secrets.DB_USERNAME_DEV }}
                  DB_PORT: ${{ vars.DB_PORT_DEV }}
                  DB_PASSWORD: ${{ secrets.DB_PASSWORD_DEV }}
                  DB_SSL_CA_CERT: ${{ secrets.DB_SSL_CA_CERT_DEV }}
                  JWT_SECRET: ${{ secrets.JWT_SECRET_DEV }}
                  JWT_EXPIRES_IN: ${{ vars.JWT_EXPIRES_IN_DEV }}
                  PORT: ${{ vars.PORT_DEV }}
                  FILESERVICE_PORT: ${{ vars.FILESERVICE_PORT_DEV }}
                  BE_FILE_SERVER_URL: ${{ vars.BE_FILE_SERVER_URL_DEV }}
              run: |
                  echo "DB_TYPE=${DB_TYPE}" >> $GITHUB_ENV
                  echo "DB_DATABASE=${DB_DATABASE}" >> $GITHUB_ENV
                  echo "DB_HOST=${DB_HOST}" >> $GITHUB_ENV
                  echo "DB_USERNAME=${DB_USERNAME}" >> $GITHUB_ENV
                  echo "DB_PORT=${DB_PORT}" >> $GITHUB_ENV
                  echo "DB_PASSWORD=${DB_PASSWORD}" >> $GITHUB_ENV
                  echo "DB_SSL_CA_CERT=${DB_SSL_CA_CERT}" >> $GITHUB_ENV
                  echo "JWT_SECRET=${JWT_SECRET}" >> $GITHUB_ENV
                  echo "JWT_EXPIRES_IN=${JWT_EXPIRES_IN}" >> $GITHUB_ENV
                  echo "PORT=${PORT}" >> $GITHUB_ENV
                  echo "FILESERVICE_PORT=${FILESERVICE_PORT}" >> $GITHUB_ENV
                  echo "BE_FILE_SERVER_URL=${BE_FILE_SERVER_URL}" >> $GITHUB_ENV
                  
            - name: Build and push Docker image (Development)
              run: |
                  docker build -t ${{ vars.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER_DEV }}/backend:${{ github.sha }} -f Dockerfile.dev --build-arg DB_TYPE="${DB_TYPE}" --build-arg DB_DATABASE="${DB_DATABASE}" --build-arg DB_HOST="${DB_HOST}" --build-arg DB_USERNAME="${DB_USERNAME}" --build-arg DB_PORT="${DB_PORT}" --build-arg DB_PASSWORD="${DB_PASSWORD}"  --build-arg DB_SSL_CA_CERT="${DB_SSL_CA_CERT}" --build-arg JWT_SECRET="${JWT_SECRET}" --build-arg JWT_EXPIRES_IN="${JWT_EXPIRES_IN}" --build-arg PORT="${PORT}" --build-arg BE_FILE_SERVER_URL="${BE_FILE_SERVER_URL}" .
                  docker push ${{ vars.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER_DEV }}/backend:${{ github.sha }}
                  docker build -t ${{ vars.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER_DEV }}/backend:latest -f Dockerfile.dev --build-arg DB_TYPE="${DB_TYPE}" --build-arg DB_DATABASE="${DB_DATABASE}" --build-arg DB_HOST="${DB_HOST}" --build-arg DB_USERNAME="${DB_USERNAME}" --build-arg DB_PORT="${DB_PORT}" --build-arg DB_PASSWORD="${DB_PASSWORD}" --build-arg DB_SSL_CA_CERT="${DB_SSL_CA_CERT}" --build-arg JWT_SECRET="${JWT_SECRET}" --build-arg JWT_EXPIRES_IN="${JWT_EXPIRES_IN}" --build-arg PORT="${PORT}" --build-arg BE_FILE_SERVER_URL="${BE_FILE_SERVER_URL}" .
                  docker push ${{ vars.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER_DEV }}/backend:latest

    deploy:
        runs-on: ubuntu-latest
        needs: build
        environment:
            name: 'production'
            url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

        steps:
            - name: Deploy to Azure Web App
              id: deploy-to-webapp
              uses: azure/webapps-deploy@v2
              with:
                  app-name: 'scoop-dev-backend'
                  slot-name: 'production'
                  publish-profile: ${{ secrets.AzureAppService_PublishProfile_e701ab39c8fc487aa80e83f44b85f23e }}
                  images: 'scoopdevcontainerregistry.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_22c65bee59134efc834781cf216c0ff5 }}/backend:${{ github.sha }}'
